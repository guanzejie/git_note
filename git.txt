一 、  本地操作

   1 初始化本地库
                     git init

   2设置签名 （项目级别优先于系统级别的签名）项目级别得签名信息保存在.git/config文件夹下

                   //git config                  项目级别                        项目级别得签名信息保存在.git/config文件夹下
                   //git config  --global    系统级别                        系统级别得签名信息保存在C:\Users\42406\.gitconfig文件夹下

               git config user.name guan
               git config user.email 424069281@QQ.com

   3添加提交

             git add git.txt       把文件添加到缓冲区  ，如果后悔了不想添加到缓冲区  git rm --cached git.txt

             git status 查看工作区的缓冲区的状态

             git commit git.txt    提交到服务器，然后键入i写注释，：wq退出


      如果提交后的文件修改了需要重新添加缓冲器和重新提交，也可以恢复文件

              git restore <file>     恢复文件

              git commit -m "second commit" git.txt    提交并写上注释

   4版本查看
   
              git log          查看版本信息      --pretty=oneline   或者--oneline         ，b上翻，空格下翻，q退出

              git reflog     查看版本信息带指针步数

   5版本移动   reset 的参数有--hard      --soft     --mixed

             1索引值法       git reset --hard  b08b77c   索引值的移动操作法
             2符号^法        git reset --hard HEAD^      几个^符号退几步如git reset --hard HEAD^^^^^^^^
             3符号~法        git reset --hard HEAD~3      符号~后面的数字是几就退几步

   6比较差异
       
             git diff git.txt                比较修改后的差异    （将工作区的文件和缓冲区的文件去比较）
             git diff HEAD^ git.txt    比较修改后的差异    （将本地库的某个历史文件和工作区比较）
             git diff                          比较多个文件

   7分支

            1   git branch -v                查看分支
            2   git branch hot_fix         创建名为hot_fix 分支
            3   git checkout hot_fix      切换到hot_fix 分支
            4   合并分支  git merge [分支名]
                      1切换到接受修改得分支（需要增加内容得分支）git checkout master
                      2执行合并命令      git merge hot_fix

            5合并冲突解决
                     1手动解决，删除特殊符号
                      2执行 git add [文件名]
                      3执行 git commit       解决冲突（不带文件名）

二 、 远程操作                        ******凭据管理********

      1登录创建仓库   在网页上点击    +  

      2复制仓库得地址https://github.com/guanzejie/git_note.git

      3给地址起个别名 git remote add  别名 https://github.com/guanzejie/git_note.git
                               git remote -v   查看别名

      4推送本地库 git push 网址或者别名 分支      如git push note master

      5克隆到本地库
                    1创建文件夹并进入文件夹
                    2到网址得 code 栏复制网址
                    3转换到其他文件夹工程（以免造成混乱）
                    4执行 git clone 网址 得操作

      6 如果有其它用户需要加入团队一起开发必须把用户加入团队
                    1在网页的 settings 中找到 manage access   点击   add people 
                    2填入对方账号，复制链接发送给对方

      7 抓取远程库的代码
                    1  git fetch 网址或者别名 分支     （只是下载到了本地变成了一个分支，并不会覆盖）
                    2  可用git checkout  网址/master   切换到下载的分支
                    3  然后切换回原分支git checkout  master   执行分支合并  git merge note/master
                    4可以使用 给(git pull 网址或者别名 分支 )命令，相当于 fetch和merge两个操作合并一起做

      8 如果是团队合作，在push你的文件之前，必须先抓取pull一份最新的服务器上的文件，解决分支冲突后才能push

三  、 跨团队合作

      1 其他团队先在我方网站里fork一份数据
      2 clone到本地修改完后然后push到远程服务器
      3 然后点击pull requests栏，点击new pull requests ，查看修改内容后点击create pull requests栏，编写留言给对方
      4 对方在pull requests 栏会收到消息，可以查看以及回复
      5 对方在file changed 栏可以看到修改内容，对代码进行审核，审核完点击merge pull requests栏进行合并
      6 编写日志 然后点击confirm merge


四  、  ssh免密码登录

                 1生产ssh目录   ssh-keygen -t rsa -C 账号
                 2打开生产的id_rsa.pub文件复制内容
                 3在网页上点击头像-设置-SSH and GPG keys-new ssh key 复制到里面并写好标题
                 4回到库的工作区 使用git remote 别名 ssh网址创建ssh别名（也可以直接用网址）如git remote sssh git@github.com:guanzejie/git_note.git
                 5推送到远程服务区并不需要密码了
          
                    